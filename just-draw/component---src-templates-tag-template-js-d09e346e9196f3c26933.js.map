{"version":3,"sources":["webpack://just-draw/./src/components/tags.js","webpack://just-draw/./src/templates/tag-template.js"],"names":["tags","tagSlugs","className","map","slug","i","key","to","data","location","pageContext","edges","allMarkdownRemark","siteTitle","site","siteMetadata","title","tag","description","excerpt","descriptions","style","listStyle","edge","node","fields","itemProp","frontmatter","pull","push"],"mappings":"kIAgBA,IAba,SAAC,GAAD,IAAGA,EAAH,EAAGA,KAAMC,EAAT,EAASA,SAAT,OACX,uBAAKC,UAAU,QACZD,GACCA,EAASE,KAAI,SAACC,EAAMC,GAAP,OACX,uBAAKH,UAAU,MAAMI,IAAKN,EAAKK,IAC7B,gBAAC,KAAD,CAAME,GAAIH,GACPJ,EAAKK,W,+FCqClB,UAvCoB,SAAC,GAAqC,IAAD,EAAlCG,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,YAC/BC,EAAQH,EAAKI,kBAAkBD,MAC/BE,EAAS,UAAGL,EAAKM,KAAKC,oBAAb,aAAG,EAAwBC,MAClCC,EAAQP,EAARO,IACR,OACE,gBAAC,IAAD,CAASR,SAAUA,EAAUO,MAAOH,GAClC,gBAAC,IAAD,CAAKG,MAAOC,EAAKC,YAAaV,EAAKI,kBAAkBO,UACrD,uBAAKjB,UAAU,iBACb,uBAAKA,UAAU,OAAM,yBAAIe,IACzB,uBAAKf,UAAU,mBACb,yBAAIkB,EAAaH,KAEnB,sBAAII,MAAO,CAAEC,UAAU,SACpBX,EAAMR,KAAI,SAAAoB,GACT,IAAMC,EAAOD,EAAKC,KAClB,OACE,sBAAIlB,IAAKkB,EAAKC,OAAOrB,KAAMF,UAAU,gBACnC,0BACE,gBAAC,KAAD,CAAMK,GAAIiB,EAAKC,OAAOrB,KAAMsB,SAAS,OACnC,wBAAMA,SAAS,YAAYF,EAAKG,YAAYX,SAGhD,2BACGQ,EAAKG,YAAY3B,MAChB,gBAAC,IAAD,CACEA,KAAMwB,EAAKG,YAAY3B,KACvBC,SAAUuB,EAAKC,OAAOxB,oBAerC,IAwBDmB,EAAe,CACnBQ,KAAM,8EACNC,KAAM","file":"component---src-templates-tag-template-js-d09e346e9196f3c26933.js","sourcesContent":["import * as React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst Tags = ({ tags, tagSlugs }) => (\n  <div className=\"tags\">\n    {tagSlugs &&\n      tagSlugs.map((slug, i) => (\n        <div className=\"tag\" key={tags[i]}>\n          <Link to={slug} >\n            {tags[i]}\n          </Link>\n        </div>\n      ))}\n  </div>\n)\n\nexport default Tags\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Burrito from \"../components/burrito\"\nimport SEO from \"../components/seo\"\nimport Tags from \"../components/tags\"\n\nconst TagTemplate = ({ data, location, pageContext }) => {\n  const edges = data.allMarkdownRemark.edges\n  const siteTitle = data.site.siteMetadata?.title\n  const { tag } = pageContext\n  return (\n    <Burrito location={location} title={siteTitle}>\n      <SEO title={tag} description={data.allMarkdownRemark.excerpt} />\n      <div className=\"tag-exercises\">\n        <div className=\"tag\"><p>{tag}</p></div>\n        <div className=\"tag-description\">\n          <p>{descriptions[tag]}</p>\n        </div>\n        <ol style={{ listStyle: `none` }}>\n          {edges.map(edge => {\n            const node = edge.node\n            return (\n              <li key={node.fields.slug} className=\"tag-exercise\">\n                <h2>\n                  <Link to={node.fields.slug} itemProp=\"url\">\n                    <span itemProp=\"headline\">{node.frontmatter.title}</span>\n                  </Link>\n                </h2>\n                <div>\n                  {node.frontmatter.tags && (\n                    <Tags\n                      tags={node.frontmatter.tags}\n                      tagSlugs={node.fields.tagSlugs}\n                    />\n                  )}\n                </div>\n              </li>\n            )\n          })}\n        </ol>\n      </div>\n    </Burrito>\n  )\n}\n\nexport default TagTemplate\n\nexport const pageQuery = graphql`\n  query TagBySlug($tag: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(filter: { frontmatter: { tags: { eq: $tag } } }) {\n      edges {\n        node {\n          fields {\n            slug\n            tagSlugs\n          }\n          frontmatter {\n            title\n            tags\n          }\n        }\n      }\n    }\n  }\n`\n\nconst descriptions = {\n  pull: \"Pull from your visual library: practice drawing from memory and imagination\",\n  push: \"Push into your visual library: practice drawing from reference\",\n\n};\n"],"sourceRoot":""}