{"version":3,"sources":["webpack://just-draw/./src/pages/index.js"],"names":["data","location","siteTitle","site","siteMetadata","title","exercises","group","map","e","fieldValue","tagOptions","React","tags","tag","random","Math","floor","length","selected","setSelected","console","log","className","value","onChange","currentTarget","key","to","itemProp","disabled"],"mappings":"8JA6CA,UAvCkB,SAAC,GAAwB,IAAD,EAArBA,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACnBC,GAAY,UAAAF,EAAKG,KAAKC,oBAAV,eAAwBC,QAAxB,QACZC,EAAYN,EAAKM,UAAUC,MAAMC,KAAI,SAAAC,GAAC,OAAIA,EAAEC,cAC3CC,EAAcC,WAAeZ,EAAKa,KAAKN,MAAMC,KAAI,SAAAM,GAAG,MAAG,CAACA,EAAIJ,WAAL,QAAyBI,EAAIJ,gBAHnD,GAIlCK,EAAST,EAAUU,KAAKC,MAAMD,KAAKD,SAAWT,EAAUY,SAJtB,EAKRN,WAAe,KAAxCO,EALiC,KAKvBC,EALuB,KAOxC,OADAC,QAAQC,IAAIH,GAEV,gBAAC,IAAD,CAASlB,SAAUA,EAAUI,MAAOH,GAClC,gBAAC,IAAD,CAAKG,MAAM,cACX,uBAAKkB,UAAU,aACb,uBAAKA,UAAU,kBACb,iDACA,0BACEA,UAAU,eACVC,MAAOL,EACPM,SAAU,SAAAhB,GAAC,OAAIW,EAAYX,EAAEiB,cAAcF,SAE3C,0BAAQA,MAAM,KAAd,iBACCb,EAAWH,KAAI,SAAAM,GAAG,OACjB,0BAAQa,IAAKb,EAAI,GAAIU,MAAOV,EAAI,IAC7BA,EAAI,SAKb,uBAAKS,UAAU,WACb,gBAAC,KAAD,CAAMA,UAAU,MAAMK,GAAIb,EAAQc,SAAS,OACzC,kDAEF,gBAAC,KAAD,CAAMN,UAAU,MAAMK,GAAIT,EAAUW,SAAqB,MAAXX,EAAgBU,SAAS,OACrE","file":"component---src-pages-index-js-c658dfd250606398b9cd.js","sourcesContent":["import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Burrito from \"../components/burrito\"\nimport SEO from \"../components/seo\"\n\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const exercises = data.exercises.group.map(e => e.fieldValue);\n  const [tagOptions] = React.useState(data.tags.group.map(tag =>[tag.fieldValue, `/tag/${tag.fieldValue}`]));\n  const random = exercises[Math.floor(Math.random() * exercises.length)];\n  const [selected, setSelected] = React.useState(\"/\");\n  console.log(selected)\n  return (\n    <Burrito location={location} title={siteTitle}>\n      <SEO title=\"Just draw\"/>\n      <div className=\"just-draw\">\n        <div className=\"call-to-action\">\n          <h3>I want to practice </h3>\n          <select\n            className=\"tag-dropdown\"\n            value={selected}\n            onChange={e => setSelected(e.currentTarget.value)}\n            >\n            <option value=\"/\">Select a tag:</option>\n            {tagOptions.map(tag => (\n              <option key={tag[0]} value={tag[1]}>\n                {tag[0]}\n              </option>\n            ))}\n          </select>\n        </div>\n        <div className=\"buttons\">\n          <Link className=\"btn\" to={random} itemProp=\"url\" >\n            <span>I'm feeling lucky</span>\n          </Link>\n          <Link className=\"btn\" to={selected} disabled={selected===\"/\"} itemProp=\"url\" >\n            <span>Practice</span>\n          </Link>\n        </div>\n      </div>\n    </Burrito>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    tags: allMarkdownRemark {\n      group(field: frontmatter___tags) {\n        fieldValue\n      }\n    }\n    exercises: allMarkdownRemark {\n      group(field: fields___slug) {\n        fieldValue\n      }\n    }\n  }\n`\n"],"sourceRoot":""}